<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on maiatoday</title><link>https://www.maiatoday.net/post/</link><description>Recent content in Posts on maiatoday</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Jun 2021 21:36:11 +0000</lastBuildDate><atom:link href="https://www.maiatoday.net/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Random Animating Pie Button</title><link>https://www.maiatoday.net/p/random-animating-pie-button/</link><pubDate>Wed, 16 Jun 2021 21:36:11 +0000</pubDate><guid>https://www.maiatoday.net/p/random-animating-pie-button/</guid><description>I am exploring animations with small sampler functions using Jetpack Compose. This one is a custom component that draws a little pie chart. It will animate a random pie value on the click of the button.
click and animate
code</description></item><item><title>Hello8Ball</title><link>https://www.maiatoday.net/p/hello8ball/</link><pubDate>Sat, 23 Nov 2019 21:36:11 +0000</pubDate><guid>https://www.maiatoday.net/p/hello8ball/</guid><description>A sampler app to explore Coroutine testing. This is a toy app that simulates an 8 Ball. It can answer questions, find synonmyms, generate a password or check if a number is prime. It was created to make a situation where it makes sense to use coroutines to e.g. go on the network or make a calculation. Then I added tests for all the pieces using kotlinx-coroutine-test.
As a bonus the repo is set up to run the tests on CircleCi.</description></item><item><title>HelloTrain</title><link>https://www.maiatoday.net/p/hellotrain/</link><pubDate>Fri, 08 Feb 2019 21:36:13 +0000</pubDate><guid>https://www.maiatoday.net/p/hellotrain/</guid><description>Exploring railroad error handling in Kotlin. Pure Kotlin.
code</description></item><item><title>Note to Future me — add jacoco and coverage limits</title><link>https://www.maiatoday.net/p/note-to-future-me-add-jacoco-and-coverage-limits/</link><pubDate>Sat, 13 Oct 2018 13:55:25 +0000</pubDate><guid>https://www.maiatoday.net/p/note-to-future-me-add-jacoco-and-coverage-limits/</guid><description>I have found myself adding jacoco and coverage limits to more than one Android project. Enough times for me to extract the gradle bits in to a little nugget of grooviness to just drop into a project as needed. For a while now I have been reading about test coverage numbers and working with my intuition about what is the most valuable thing for me to spend my time on when building something.</description></item><item><title>Note to future me — Adding GraphQL to an app</title><link>https://www.maiatoday.net/p/note-to-future-me-adding-graphql-to-an-app/</link><pubDate>Sun, 08 Apr 2018 21:36:13 +0000</pubDate><guid>https://www.maiatoday.net/p/note-to-future-me-adding-graphql-to-an-app/</guid><description>Adding the library to the app see commit 03bd7a7534f7a23276fc47c4f7c94d7ac153bc0b
plugin dependencies Making a service
wrapping and existing endpoint https://github.com/joakin/wikimedia-graphql install node if you don’t have it. node — version running the service `node index.js`  play with the service  https://gist.github.com/maiatoday/578aebcee3bd9decb6e3c6833c73a4ba#file-wikipage-graphql
getting the json.schema https://github.com/apollographql/apollo-codegen cd app/src/main/graphql/net/maiatoday/helloblondie apollo-codegen download-schema http://localhost:3002/graphql — output schema.json Adding the service to the app
adding a query adding the schema a5a47f0ff45f6bc5d5a3aa6f1fee50af363f7893 getting access to the service calling the service</description></item><item><title>Note to Future Me — Testing Intents with Matchers</title><link>https://www.maiatoday.net/p/note-to-future-me-testing-intents-with-matchers/</link><pubDate>Fri, 26 Jan 2018 14:54:45 +0000</pubDate><guid>https://www.maiatoday.net/p/note-to-future-me-testing-intents-with-matchers/</guid><description>I want to make my little experiments public and save them as a reminder for future me. So here is yet another post on Matchers and Espresso testing.
I want to test this:
First activity starts another activity at a button click.
First activity passes a parcelable object to the second activity.
Test that the intent that starts the second activity contains the object with the correct properties.</description></item><item><title>HelloKeystore</title><link>https://www.maiatoday.net/p/hellokeystore/</link><pubDate>Sun, 12 Nov 2017 21:36:13 +0000</pubDate><guid>https://www.maiatoday.net/p/hellokeystore/</guid><description>Curious Keystore experiments. A small simple project that saves something in the keystore and gets it out again. Tricksiness happens across versions of Android.
code</description></item><item><title>Neotaur-Geotaur</title><link>https://www.maiatoday.net/p/neotaur-geotaur/</link><pubDate>Mon, 29 Aug 2016 14:04:46 +0200</pubDate><guid>https://www.maiatoday.net/p/neotaur-geotaur/</guid><description>I like to make sampler apps to explore new things to learn. I was wondering how the google location apis differed from the new awereness apis. The Geotaur repo has an app that can use either of these two interfaces. Since it builds two flavours you can run the apps side by side with the same geofences to see how they differ. While I was at it I tried my hand at some other tech too, firebase remote logging and db access, dependency injection.</description></item><item><title>autoselfie 2013</title><link>https://www.maiatoday.net/p/autoselfie-2013/</link><pubDate>Thu, 09 Oct 2014 21:36:13 +0000</pubDate><guid>https://www.maiatoday.net/p/autoselfie-2013/</guid><description>An android app to explore how apps can modify images and detect faces. The code is here.</description></item><item><title>seed spark 2013</title><link>https://www.maiatoday.net/p/seed-spark-2013/</link><pubDate>Thu, 09 Oct 2014 21:26:46 +0000</pubDate><guid>https://www.maiatoday.net/p/seed-spark-2013/</guid><description>In 2013 I made a variation of an older kinect piece called seedSpark. There were some improvements in the code which now used Frame buffers.</description></item><item><title>Masters 2012</title><link>https://www.maiatoday.net/p/masters-2012/</link><pubDate>Thu, 09 Oct 2014 20:54:30 +0000</pubDate><guid>https://www.maiatoday.net/p/masters-2012/</guid><description>In 2012 I made my Masters exhibition using openframeworks and the Kinect. It consisted of 4 interactive works which explored concepts around human ideas and machine execution. The repo veloPeople contains all four works each in their own branch. Each work was built on a custom ubuntu live disk. So the installation works existed on flash disk. Given the right hardware you could boot from the flash disk and run one of the works.</description></item></channel></rss>